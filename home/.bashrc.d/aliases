#Disk space
alias du='du -kh'    # Makes a more readable output.
alias df='df -kTh'
alias ducks='du -cmsx * | sort -n'

#-------------------------------------------------------------
# The 'ls' family (this assumes you use a recent GNU ls).
#-------------------------------------------------------------
# Add colors for filetype and  human-readable sizes by default on 'ls':
alias ls='ls -h --color'
alias lx='ls -lXB'         #  Sort by extension.
alias lk='ls -lSr'         #  Sort by size, biggest last.
alias lt='ls -ltr'         #  Sort by date, most recent last.
alias lc='ls -ltcr'        #  Sort by/show change time,most recent last.
alias lu='ls -ltur'        #  Sort by/show access time,most recent last.

# The ubiquitous 'll': directories first, with alphanumeric sorting:
alias ll="ls -lv --group-directories-first"
alias lm='ll |more'        #  Pipe through 'more'
alias lr='ll -R'           #  Recursive ls.
alias la='ll -A'           #  Show hidden files.
alias tree='tree -Csuh'    #  Nice alternative to 'recursive ls' ...


###########  DOCKER  ##############
# Kill all running containers.
alias dockerkillall='docker kill $(docker ps -q)'

# Delete all stopped containers.
alias dockercleanc='printf "\n>>> Deleting stopped containers\n\n" && docker rm $(docker ps -a -q)'

# Delete all untagged images.
alias dockercleani='printf "\n>>> Deleting untagged images\n\n" && docker rmi $(docker images -q -f dangling=true)'

# Delete all stopped containers and untagged images.
alias dockerclean='dockercleanc || true && dockercleani'

#Sudo stuff
if [ -x '/usr/bin/sudo' ];then
  alias sudo='sudo -E'
  alias sbash='sudo -E bash'
  export PATH=$PATH:/sbin:/usr/sbin:/usr/local/sbin
fi


fleet_stop_destroy() {
  local unit_file="${1}"
  if ! fleetctl list-units | awk '{print $1}' | grep -q "${unit_file}"; then
    echo "Error: Looks like the unit file doesn't exist"
  else
    fleetctl stop "${unit_file}"
    fleetctl destroy "${unit_file}"
  fi
}
fleet_load_start() {
  local unit_file="${1}"
  if fleetctl list-units | awk '{print $1}' | grep -q "${unit_file}"; then
    echo "Error: Looks like the unit file exist"
  else
    fleetctl load "${unit_file}"
    fleetctl start "${unit_file}"
    sleep 2
    if fleetctl list-units | grep "${unit_file}" | grep -q failed; then
      fleetctl journal "${unit_file}"
    else
      echo "Winning!!!"
    fi

  fi
}

fleetctl_stop_start () {
  local unit_file="${1}"
  if !  fleetctl list-units | awk '{print $1}' | grep -q "${unit_file}"; then
    echo "Error: Looks like the unit does not exist"
  else
    fleetctl stop  "${unit_file}"
    fleetctl start "${unit_file}"
    sleep 2
    if fleetctl list-units | grep "${unit_file}" | grep -q failed; then
      fleetctl journal "${unit_file}"
    else
      echo "Winning!!!"
    fi

  fi
}

export FLEETCTL_TUNNEL=finf-coreos01.ecovate.com:22
alias fld=fleet_stop_destroy
alias fls=fleet_load_start
